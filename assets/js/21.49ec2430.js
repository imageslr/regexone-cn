(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{386:function(t,e,a){"use strict";a.r(e);var n=a(45),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"课程-3-匹配特定字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程-3-匹配特定字符"}},[t._v("#")]),t._v(" 课程 3：匹配特定字符")]),t._v(" "),a("p",[t._v("上节课的点元字符非常强大，但有时"),a("strong",[t._v("太")]),t._v('强大了。比如我们匹配电话号码时，并不希望将字母"(abc) def-ghij"视作一个有效的号码。')]),t._v(" "),a("p",[t._v("有一种方法可以在正则表达式中"),a("strong",[t._v("匹配特定字符")]),t._v("，方法是在"),a("strong",[t._v("方括号 (square brackets)")]),t._v(" 中定义它们。比如，模式 "),a("strong",[a("code",[t._v("[abc]")])]),t._v(" 将只匹配"),a("strong",[t._v("单个")]),t._v("字母 a、b 或者 c，其他什么也不匹配。")]),t._v(" "),a("p",[t._v("下面几行字符串中，我们只想匹配前三个而不匹配后三个。请注意，如果使用点元字符，我们就无法避免匹配后三个字符串。因此，必须使用上面的方法来明确声明要匹配的字母。")]),t._v(" "),a("Exercise",{attrs:{title:"练习 3：匹配特定字符",data:[{type:"match",text:"can"},{type:"match",text:"man"},{type:"match",text:"fan"},{type:"skip",text:"dan"},{type:"skip",text:"ran"},{type:"skip",text:"pan"}]}},[t._v("您可以使用表达式 "),a("SolutionLink",{attrs:{text:"[cmf]an"}}),t._v(" 来只匹配 'can'、'man' 和 'fan'，而不匹配任何其他行。正如您将在下一课中看到的，您也可以使用逆表达式 (inverse expression) "),a("SolutionLink",{attrs:{text:"[^drp]an"}}),t._v(" 来匹配任意以 'an' 结尾、但不以 'd'、'r' 或 'p' 开头的三个字母的单词。\n")],1)],1)}),[],!1,null,null,null);e.default=s.exports}}]);