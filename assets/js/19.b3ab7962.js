(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{384:function(t,e,a){"use strict";a.r(e);var v=a(45),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"课程-7-kleene-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程-7-kleene-操作符"}},[t._v("#")]),t._v(" 课程 7：Kleene 操作符")]),t._v(" "),a("p",[t._v("正则表达式中一个强大的概念是能够匹配任意数量的字符。例如，假设您编写了一个表单，其中有一个以美元为单位的捐赠字段。一个富有的用户可能会顺道来，想捐 25000 美元，而一个普通用户可能想捐 25 美元。")]),t._v(" "),a("p",[t._v("表达这种模式的一种方法是使用"),a("strong",[t._v("克莱尼星号 (Kleene Star)")]),t._v(" 和"),a("strong",[t._v("克莱尼加号 (Kleene Plus)")]),t._v("，分别表示 "),a("strong",[t._v("0 个或更多个")]),t._v("、"),a("strong",[t._v("1 个或更多个")]),t._v("它所跟随的字符 (或组)。例如，为了匹配上面的捐赠金额，我们可以使用模式 "),a("strong",[a("code",[t._v("\\d*")])]),t._v(" 来匹配任意数量的数字，但是更严格的正则表达式是 "),a("strong",[a("code",[t._v("\\d+")])]),t._v("，它确保输入的字符串至少有一个数字。")]),t._v(" "),a("p",[t._v("这些量词可以与任意字符或特殊的元字符一起使用，例如 "),a("strong",[a("code",[t._v("a+")])]),t._v(" (一个或多个 a)、"),a("strong",[a("code",[t._v("[abc]+")])]),t._v(" (一个或多个字符 a、b 或 c) 和 "),a("strong",[a("code",[t._v(".*")])]),t._v(" (零个或多个"),a("strong",[t._v("任意")]),t._v("字符)。")]),t._v(" "),a("p",[t._v("下面是几个简单的字符串，您可以使用星号和加号元字符来匹配它们。")]),t._v(" "),a("Exercise",{attrs:{title:"练习 7：匹配重复字符",data:[{type:"match",text:"aaaabcc"},{type:"match",text:"aabbbbc"},{type:"match",text:"aacc"},{type:"skip",text:"a"}]}},[t._v("要匹配的字符串中，有至少两个 'a'、0 个或多个 'b'、至少一个 'c'，因此可以使用表达式 "),a("SolutionLink",{attrs:{text:"aa+b*c+"}}),t._v(" 来表示。"),a("br"),t._v("或者，一个限制性更强的表达式是 "),a("SolutionLink",{attrs:{text:"a{2,4}b{0,4}c{1,2}"}}),t._v("，它为每个字符的数量都设置了一个上限和下限。")],1)],1)}),[],!1,null,null,null);e.default=_.exports}}]);